name: .NET

on:
  push:
  pull_request:

jobs:
  buildAndTest:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0        

    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.11
      with:
        versionSpec: '5.8.1'

    - name: Determine Version
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7            

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Test version
      run: dotnet build --no-restore 
      
    - name: Run Tests
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --settings MyPackage.Tests/coverlet.runsettings

    - name: Build Release version
      run: dotnet build --no-restore --configuration release /p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} /p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} /p:InformationalVersion=${{ steps.gitversion.outputs.Sha }}

    - name: Pack
      run: dotnet pack --no-build --output ./output --configuration Release /p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersionV2 }}

    - name: 7Zip Package
      run: 7z a -t7z -mx=9 MyPackage.7z ./output/

    - name: Upload Package to job
      uses: actions/upload-artifact@v1
      with:
        name: "MyPackage-${{ steps.gitversion.outputs.nuGetVersionV2 }}"
        path: MyPackage.7z

    - name: Upload Package to release
      # if: contains(github.ref, 'master')
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: MyPackage.7z
        asset_name: MyPackage.7z
        tag: "${{ steps.gitversion.outputs.fullSemVer }}"
        overwrite: true