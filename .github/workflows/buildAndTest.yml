# https://dusted.codes/github-actions-for-dotnet-core-nuget-packages
name: .NET

on:
  push:
  pull_request:

env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true

  # Official NuGet Feed settings
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_KEY }}

jobs:

# --------------------------------------------------------------------------------------------------------

  setup-dotnet:
    name: Setup .NET
    runs-on: ubuntu-20.04
    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

# --------------------------------------------------------------------------------------------------------

  git-checkout:
    name: Check out the repository
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0        

# --------------------------------------------------------------------------------------------------------

  calculate-version:
    name: Calculate Version
    needs: 
    - git-checkout
    - setup-dotnet
    runs-on: ubuntu-20.04
    outputs:
      version_assemblySemFileVer:  ${{ steps.gitversion.outputs.assemblySemFileVer }}
      version_sha:  ${{ steps.gitversion.outputs.assemblySemFileVer }}
      version_nuGetVersionV2:  ${{ steps.gitversion.outputs.nuGetVersionV2 }}
      version_fullSemVer:  ${{ steps.gitversion.outputs.fullSemVer }}
    steps:
      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.11
        with:
          versionSpec: '5.8.1'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7

# --------------------------------------------------------------------------------------------------------

  build-and-test:
    runs-on: ubuntu-20.04
    needs: 
    - calculate-version
    steps:
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Test version
      run: dotnet build --configuration Release  --no-restore
      
    - name: Run Tests
      run: dotnet test --configuration Release  --verbosity normal --collect:"XPlat Code Coverage" --settings MyPackage.Tests/coverlet.runsettings

    - name: Build Release version
      run: dotnet build --no-restore --configuration Release /p:AssemblyVersion=${{ needs.calculate-version.outputs.version_assemblySemFileVer }} /p:FileVersion=${{ needs.calculate-version.outputs.version_assemblySemFileVer }} /p:InformationalVersion=${{ needs.calculate-version.outputs.version_sha }}

    - name: Pack
      run: dotnet pack --output ./output --verbosity normal --configuration Release --no-restore --include-symbols --include-source -p:PackageVersion={{ needs.calculate-version.outputs.version_nuGetVersionV2 }} src/$PROJECT_NAME/$PROJECT_NAME.*proj

    - name: Upload Artificat to job
      uses: actions/upload-artifact@v2
      with:
        name: "MyPackage-${{ needs.calculate-version.outputs.version_nuGetVersionV2 }}"
        path: ./output/MyPackage.nupkg

# --------------------------------------------------------------------------------------------------------

  deploy:
    # if: contains(github.ref, 'master')
    runs-on: ubuntu-20.04
    needs: 
    - build-and-test
    - calculate-version
    steps:
    - name: Upload Package to release
      # if: contains(github.ref, 'master')
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./output/MyPackage.nupkg
        asset_name: "MyPackage-${{ needs.calculate-version.outputs.version_nuGetVersionV2 }}"
        tag: "${{ needs.calculate-version.outputs.version_fullSemVer }}"
        overwrite: true

    - name: Upload Package to NuGet
      run: dotnet nuget push ./output/MyPackage.nupkg --source $NUGET_FEED --skip-duplicate --api-key ${{ secrets.NUGET_KEY }}